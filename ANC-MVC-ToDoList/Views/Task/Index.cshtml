﻿﻿@using ToDoList.Domain.Enum
@{
    ViewData["Title"] = "Main";
}

<h4 class="mb-3 text-muted">Creating a task</h4>
<form id="createTaskForm">
    <div class="mb-3">
        <label class="form-label">Task name</label>
        <input name="name" type="text" class="form-control" />
    </div>
    <label class="form-label">Task priority</label>
    <select name="priority" class="form-select mb-3" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    <div class="mb-3">
        <label class="form-label">Task description</label>
        <textarea name="description" type="text" class="form-control" rows="3"></textarea>
    </div>
    <button id="createTask" class="btn btn-primary">Create</button>
</form>

<br />

<div class="row">
    <div class="form-group col-md-6">
         <label class="col-form-label">Name</label>
         <input name="nameTask" type="text" class="form-control" />
    </div>
    <div class="from-group col-md-6">
        <label class="col-form-label">Priority</label>
        <select id="prioritySearch" class="form-control mb-3" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    </div>
</div>

<br/>

<table class="table table-dark table-hover" id="taskTableId">
    <thead>
        <tr>
            <th>Name</th>
            <th>Complexity</th>
            <th>Description</th>
            <th>Readiness</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section Scripts
    {
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success'
            },
            buttonStyling: false
        })

        let dataTable = $('#taskTableId').DataTable({
            info: false,
            serverSide: true,
            searching: false,
            paging: false,
            sorting: false,
            ajax: {
                url: "@Url.Action("TaskHandler")",
                method: 'POST',
                data: model  
            },
            columns: [
                { data: 'name' },
                { data: 'priority' },
                { data: 'description' },
                { data: 'isDone' },
                {
                    data: null,
                    sortable: false,
                    render: function (data, type) {
                        return '<button class="btn btn-success btn-sm btn-block">Complete</button>'
                    }
                }
            ],
            createdRow: function (nRow, data) {

                var handlerComplete = function () {
                    swalWithBootstrapButtons.fire({
                        title: "Complete the task?",
                        icon: "warning",
                        confirmButtonText: "Yes!",
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("EndTask")',
                                data: { id: data.id },
                                success: function (response) {
                                    Swal.fire({
                                        title: 'Information',
                                        text: response.description,
                                        icon: 'success',
                                        confirmButtonText: 'Ok'
                                    })
                                    dataTable.draw();
                                },
                                error: function (response) {
                                    Swal.fire({
                                        title: 'Information',
                                        text: response.responseJSON.description,
                                        icon: 'error',
                                        confirmButtonText: 'Ok'
                                    })
                                }
                            })
                        }
                    });
                }

                for (var i = 0; i < dataTable.columns().header().length - 1; i++) {
                    $('td', nRow).eq(i).css('cursor', 'pointer');

                    $('td', nRow).eq(i).on('click', null);
                }
                $('td button', nRow).on('click', handlerComplete);
            }
        });

        function model(){
            return {
                Name: $('input[name="nameTask"]').val(),
                Priority: $('#prioritySearch option:selected').val()
            }
        }

        $('input[name="nameTask"]').on('change', function () {
            dataTable.draw();
        })

        $('#prioritySearch').on('change', function () {
            dataTable.draw();
        })

        $('#createTask').on('click', function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "Task")',
                data: $('#createTaskForm').serialize(),
                success: function (response) {
                    Swal.fire({
                        title: 'Information',
                        text: response.description,
                        icon: 'success',
                        confirmButtonText: 'Ok'
                    })
                },
                error: function (response) {
                    Swal.fire({
                        title: 'Information',
                        text: response.responseJSON.description,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    })
                }
            })
        });
    </script>
}